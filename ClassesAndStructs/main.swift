//
//  main.swift
//  ClassesAndStructs
//
//  Created by –í–∞–ª–µ—Ä–∏—è –ü–æ–Ω–æ–º–∞—Ä–µ–≤–∞ on 30.10.2025.
//

import Foundation

// –ó–ê–î–ê–ß–ê: –Ω–∞—á–∏–Ω–∞—é—â–∏–π –±–ª–æ–≥–µ—Ä –ø–∏—à–µ—Ç —Å—Ç–∞—Ç—å—é –æ –∫–ª–∞—Å—Å–∞—Ö

class Post { // —Å–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω –ø–æ—Å—Ç–∞
    var title = ""
    var author = ""
    var context: String = ""
    var comments: [String] = []
    var numberOfComments = 0
    
    init(title: String, author: String, context: String) {
        self.title = title // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        self.author = author
        self.context = context
    }
        func add(comment: String) {
            numberOfComments += 1
            comments.append(comment)
        }
        
        func add(quote: String) -> String {
            context.append(quote)
            return context
        }
        func getInfo() {
              let preview = String(context.prefix(50)) + (context.count > 50 ? "..." : "")
            print("Post: \(title), Author: \(author), Text: \(preview)")
        }
    }
    
let postWhat = Post(title: "What the Dead Man said",
                    author: "Ioanna Hmelevska",
                    context: "–ê–ª–∏—Ü–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –∑–≤–æ–Ω–∏–ª–∞ –º–Ω–µ –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ –æ–±–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è...")
    
    
    // print("Author \(postWhat.author) has published first post \(postWhat.title) with text \(postWhat.body)") // Author Ioanna Hmelevska has published first post What the Dead Man said with text –ê–ª–∏—Ü–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –∑–≤–æ–Ω–∏–ª–∞ –º–Ω–µ –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ –æ–±–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è...
    
    
    let postAll = Post(title: "All red",
                       author: "Ioanna Hmelevska",
                       context: "'All red' –≤–æ–≤—Å–µ –Ω–µ –∑–Ω–∞—á–∏—Ç '–≤—Å–µ –∫—Ä–∞—Å–Ω–æ–µ', —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–Ω–æ –≤–æ–∑—Ä–∞–∑–∏–ª–∞ –ê–ª–∏—Ü–∏—è...")
    
postWhat.add(comment: "So good novel!")
postWhat.add(comment: "Waiting to the continuation")

print("Author \(postAll.author) has published first post \(postAll.title) with text \(postAll.context)")
    print(postWhat === postAll ? "–û–¥–∏–Ω –æ–±—ä–µ–∫—Ç" : "–†–∞–∑–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã") // —Å–æ–∑–¥–∞–ª–∏ '–†–∞–∑–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã'

enum DogColor {
    case red, brown, black
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å: white, spotted, golden –∏ —Ç.–¥.
}

class Dog {
    var name: String
    var color: DogColor
    var age: Int
    var isSleeping = false  // —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–±–∞–∫–∏
    
    init(name: String, color: DogColor, age: Int) {
        self.name = name
        self.color = color
        self.age = age
    }
    
    func sleep() {
        isSleeping = true
        print("\(name) is sleeping üí§")
    }
    
    func wakeUp() {
        isSleeping = false
        print("\(name) woke up! üê∂")
    }
    
    func bark() {
        if isSleeping {
            print("\(name) is sleeping and can't bark")
        } else {
            print("\(name) is barking: Woof! Woof! üêï")
        }
    }
    
    func describe() {
        print("\(name) is \(age) years old and has \(color) color")
    }
}

var pack: [Dog] = [] // –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø—É—Å—Ç–æ–π —Å—Ç–∞–∏

func listDogsInPack() {
    print("The pack is:")
    print("--")
    for dog in pack {
        print(dog.name)
    }
    print("--")
}

func addDogToPack(dog: Dog) {
    pack.append(dog)
    print("\(dog.name) aged \(dog.age) has joined the pack.")
}

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã
var fido = Dog(name: "Fido", color: .brown, age: 7)
var bruce = Dog(name: "Bruce", color: .black, age: 4)

pack = [fido, bruce]
listDogsInPack()

addDogToPack(dog: Dog(name: "Moose", color: .red, age: 11))
listDogsInPack()

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã
fido.sleep()
bruce.bark()
fido.bark()  // —Å–ø—è—â–∞—è —Å–æ–±–∞–∫–∞ –Ω–µ –ª–∞–µ—Ç!
fido.wakeUp()
fido.describe()

/* The pack is:
 --
 Fido
 Bruce
 --
 Moose aged 11 has joined the pack.
 The pack is:
 --
 Fido
 Bruce
 Moose
 --
 Fido is sleeping üí§
 Bruce is barking: Woof! Woof! üêï
 Fido is sleeping and can't bark
 Fido woke up! üê∂
 Fido is 7 years old and has brown color
 
 üìä –û—Ü–µ–Ω–∫–∞ —É–ª—É—á—à–µ–Ω–∏–π:
 –ë—ã–ª–æ    –°—Ç–∞–ª–æ    –£–ª—É—á—à–µ–Ω–∏–µ
 –ü—Ä–æ—Å—Ç–æ–π –∫–ª–∞—Å—Å    –£–º–Ω—ã–π –∫–ª–∞—Å—Å —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º    ‚úÖ
 –ë–∞–∑–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã    –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏    ‚úÖ
 –ü—Ä–æ—Å—Ç–æ–π –≤—ã–≤–æ–¥    –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–≤–æ–¥ —Å —ç–º–æ–¥–∑–∏    ‚úÖ
 –°—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ    –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ    ‚úÖ  */

print("–ó–∞–¥–∞—á–∞: –°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ –∫–Ω–∏–≥ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ: –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Book —Å —Å–≤–æ–π—Å—Ç–≤–∞–º–∏: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∞–≤—Ç–æ—Ä, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å (true/false). –†–µ–∞–ª–∏–∑—É–π –º–µ—Ç–æ–¥—ã: –≤–∑—è—Ç—å –∫–Ω–∏–≥—É, –≤–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É. –°–æ–∑–¥–∞–π –º–∞—Å—Å–∏–≤ –∫–Ω–∏–≥ –∏ –≤—ã–≤–µ–¥–∏ –∏—Ö —Å–ø–∏—Å–æ–∫.")

class Book {
    let title: String
    let author: String
    let category: String
    var isAvailable: Bool = true
    
    init(title: String, author: String, category: String) {
        self.title = title
        self.author = author
        self.category = category
        self.isAvailable = true
    }

func takeBook() {
    if isAvailable {
        isAvailable = false
        print("the book '\(title)' was taken from the library.")
    } else {
        print("the book '\(title)' was taken by someone else.")
    }
}

func returnBook() {
    if !isAvailable {
        isAvailable = true
        print("the book '\(title)' was returned to the library.")
            } else {
                print("–ö–Ω–∏–≥–∞ '\(title)' aleady available in the library.")
            }
        }
    
func displayInfo() {
        let status = isAvailable ? "–¥–æ—Å—Ç—É–ø–Ω–∞" : "–≤–∑—è—Ç–∞"
        print("'\(title)' - \(author) (\(category)) - \(status)")
    }
}

var books: [Book] = []

func add(book: Book) {
    books.append(book)
}

func displayAllBooks() {
    print("\n=== –ö–ê–¢–ê–õ–û–ì –ë–ò–ë–õ–ò–û–¢–ï–ö–ò ===")
    for book in books {
        book.displayInfo()
    }
    print("========================\n")
}

let hobbit = Book(title: "Hobbit", author: "J.R.R.Tolkien", category: "fantasy")
let shining = Book(title: "Shining", author: "Stephen King", category: "horror")
let harryPotter = Book(title: "Harry Potter and the Philosopher's Stone", author: "J.K. Rowling", category: "fantasy")

add(book: hobbit)
add(book: shining)
add(book: harryPotter)

displayAllBooks()

hobbit.takeBook()
shining.takeBook()
hobbit.takeBook()

displayAllBooks()

hobbit.returnBook()
shining.returnBook()

// –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
displayAllBooks()

/* –ó–∞–¥–∞—á–∞: –°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ –∫–Ω–∏–≥ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ: –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Book —Å —Å–≤–æ–π—Å—Ç–≤–∞–º–∏: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∞–≤—Ç–æ—Ä, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å (true/false). –†–µ–∞–ª–∏–∑—É–π –º–µ—Ç–æ–¥—ã: –≤–∑—è—Ç—å –∫–Ω–∏–≥—É, –≤–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É. –°–æ–∑–¥–∞–π –º–∞—Å—Å–∏–≤ –∫–Ω–∏–≥ –∏ –≤—ã–≤–µ–¥–∏ –∏—Ö —Å–ø–∏—Å–æ–∫.
 
 === –ö–ê–¢–ê–õ–û–ì –ë–ò–ë–õ–ò–û–¢–ï–ö–ò ===
 'Hobbit' - J.R.R.Tolkien (fantasy) - –¥–æ—Å—Ç—É–ø–Ω–∞ <- –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ç–∞–Ω–µ—Ç —Å–Ω–æ–≤–∞ "–¥–æ—Å—Ç—É–ø–Ω–∞"
 'Shining' - Stephen King (horror) - –¥–æ—Å—Ç—É–ø–Ω–∞
 'Harry Potter and the Philosopher's Stone' - J.K. Rowling (fantasy) - –¥–æ—Å—Ç—É–ø–Ω–∞
 ========================

 the book 'Hobbit' was taken from the library.
 the book 'Shining' was taken from the library.
 the book 'Hobbit' was taken by someone else.

 === –ö–ê–¢–ê–õ–û–ì –ë–ò–ë–õ–ò–û–¢–ï–ö–ò ===
 'Hobbit' - J.R.R.Tolkien (fantasy) - –≤–∑—è—Ç–∞
 'Shining' - Stephen King (horror) - –≤–∑—è—Ç–∞
 'Harry Potter and the Philosopher's Stone' - J.K. Rowling (fantasy) - –¥–æ—Å—Ç—É–ø–Ω–∞
 ========================

 the book 'Hobbit' was returned to the library.
 the book 'Shining' was returned to the library.

 === –ö–ê–¢–ê–õ–û–ì –ë–ò–ë–õ–ò–û–¢–ï–ö–ò ===
 'Hobbit' - J.R.R.Tolkien (fantasy) - –¥–æ—Å—Ç—É–ø–Ω–∞
 'Shining' - Stephen King (horror) - –¥–æ—Å—Ç—É–ø–Ω–∞
 'Harry Potter and the Philosopher's Stone' - J.K. Rowling (fantasy) - –¥–æ—Å—Ç—É–ø–Ω–∞
 ======================== */
